import { LoginSDKInterface, LoginType } from './LoginSDKInterface';
import Singleton from '../util/Singleton';
/**
 * 登录SDK
 * 统一的接口封装
 */
export default class LoginSDK extends Singleton implements LoginSDKInterface {
    private sdk;
    private mgcId;
    private accessToken;
    private env;
    /**
     * 初始化具体的LoginSDK
     * 此方法会在框架内部调用
     * @param sdk 具体的LoginSDKInterface实现类
     */
    setSdk(sdk: LoginSDKInterface): void;
    /**
     * 设置环境
     * @param env test或者production
     */
    setEnv(env: string): void;
    /**
     * 返回环境
     */
    getEnv(): string;
    /**
     * 设置小游戏对应的玩家唯一标识ID
     * @param mgcId 小游戏平台申请的唯一ID
     */
    setMgcId(mgcId: string): void;
    /**
     * 返回小游戏对应的玩家唯一标识ID
     * 不存在则为null
     * @param mgcId
     */
    getMgcId(): string;
    /**
     * 设置小游戏accessToken
     * 此方法会在框架内部调用
     * @param accessToken
     */
    setAccessToken(accessToken: string): void;
    /**
     * 返回小游戏的accessToken
     */
    getAccessToken(): string;
    /**
     * 清空小游戏的accessToken
     */
    removeAccessToken(): void;
    /**
     * 执行SDK登录流程
     * @param loginType 登录类型
     * @param callback 回调函数
     */
    login(loginType: LoginType, callback: (isSuccess: boolean, object: any) => void, options?: {
        forceLogin?: boolean;
    }): void;
}

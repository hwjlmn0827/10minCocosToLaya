/**
 * 配置解析
 */
import Singleton from "./Singleton";
export default class ConfigUtil extends Singleton {
    private _configDicts;
    private _configFolder;
    /**
     * 设置配置文件夹
     * @param configFolder 配置文件夹，默认文件夹为json
     */
    setConfigFolder(configFolder: string): void;
    /**
     * 获得配置Map的数据
     * @param configName 配置名称
     */
    getConfigDict(configName: string): any;
    /**
     * 得到配置Map指定键对应的值
     * @param configName 配置名称
     * @param key 配置键
     */
    getConfigDictValue(configName: string, key: number | string): any;
    /**
     * 异步加载配置，并转换为配置Map
     * @param configName 配置名称
     * @param option 附加参数
     */
    loadConfigDictAsync(configName: string, option?: {
        key?: string;
        folder?: string;
    }): Promise<any>;
    /**
     * 加载配置
     * @param configName 配置名称
     */
    private loadConfig;
}

import DialogBase from './DialogBase';
import Singleton from '../util/Singleton';
/**
 * 对话框管理器
 */
export default class DialogManager extends Singleton {
    /** 对话框等待弹出队列 */
    private _popWaitQueues;
    private dialogCloseListener;
    private dialogShowListener;
    /**
     * 弹出对话框
     * @param dialog 对话框对象
     * @param isAddQueue 是否加入到等待弹出队列中
     */
    showDialog(dialog: DialogBase, isPopWait?: boolean): void;
    /**
     * 设置对话框关闭监听方法
     * @param dialogCloseListener 关闭监听方法
     */
    setDialogCloseListener(dialogCloseListener: Function): void;
    /**
     * 设置对话框弹出监听方法
     * @param dialogShowListener 弹出监听方法
     */
    setDialogShowListener(dialogShowListener: Function): void;
    /**
     * 返回指定名字的对话框
     * @param name 对话框名字
     */
    getDialog(name: string): DialogBase;
    /**
     * 返回当前显示的对话框的数量
     * @returns
     */
    getDisplayDialogNum(): number;
    /**
     * 返回处于等待弹出队列的对话框数量
     * @returns
     */
    getPopWaitDialogNum(): number;
    /**
     * [游戏框架内部调用]
     * 对话框关闭时回调这个方法
     * @param dialog 对话框对象
     */
    onDialogClose(dialog: DialogBase): void;
    /**
     * [游戏框架内部调用]
     * 创建对话框默认弹出效果
     * @param isFullScreen 是否为全屏
     */
    createDialogDefaultShowEffect(isFullScreen?: boolean): Laya.Handler;
    /**
     * [游戏框架内部调用]
     * 创建对话框默认关闭效果
     * @param isFullScreen 是否为全屏
     */
    createDialogDefaultCloseEffect(isFullScreen?: boolean): Laya.Handler;
}

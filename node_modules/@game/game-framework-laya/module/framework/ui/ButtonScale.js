import AppBridge from '../bridge/AppBridge';
/**
 * 缩放按钮
 */
export default class ButtonScale extends Laya.Script {
    constructor() {
        super();
        /** @prop {name: lockTime, tips:"按钮防连点（毫秒）",type:int,default:0} */
        this.lockTime = 0;
        //默认缩放0.9
        this.smallScale = 0.9;
        this.scaleTime = 100;
        this.ignoreMove = false;
        this.ani = null;
    }
    onAwake() {
        super.onAwake();
        this.sprite = this.owner;
    }
    onMouseDown() {
        this.touchStart = true;
        if (this.ani) {
            Laya.Tween.clear(this.ani);
            this.ani = null;
        }
        else {
            this.initX = this.sprite.x;
            this.initY = this.sprite.y;
            this.initScaleX = this.sprite.scaleX;
            this.initScaleY = this.sprite.scaleY;
            this.initWidth = this.sprite.width;
            this.initHeight = this.sprite.height;
            this.smallScaleX = this.initScaleX * this.smallScale;
            this.smallScaleY = this.initScaleY * this.smallScale;
            if (Math.abs(this.sprite.pivotX / this.initWidth - 0.5) < 0.00001 &&
                Math.abs(this.sprite.pivotY / this.initHeight - 0.5) < 0.00001) {
                this.ignoreMove = true;
            }
        }
        this.scaleSmall();
    }
    onMouseUp() {
        if (!this.touchStart) {
            return;
        }
        this.touchStart = false;
        if (this.ani) {
            Laya.Tween.clear(this.ani);
            this.ani = null;
        }
        this.scaleBig();
    }
    onMouseOut() {
        if (!this.touchStart) {
            return;
        }
        if (this.ani) {
            Laya.Tween.clear(this.ani);
            this.ani = null;
        }
        this.scaleBig();
    }
    onClick() {
        this.playSound();
        this.playVibrate();
        if (this.lockTime > 0) {
            this.sprite.mouseEnabled = false;
            Laya.timer.once(this.lockTime, this, () => {
                this.sprite.mouseEnabled = true;
            });
        }
    }
    playSound() {
        if (this.soundPath) {
            Laya.SoundManager.playSound(this.soundPath);
        }
    }
    playVibrate() {
        if (this.vibrateEnabled) {
            AppBridge.getInstance().vibrateShort();
        }
    }
    scaleSmall() {
        if (this.ignoreMove) {
            this.ani = Laya.Tween.to(this.sprite, { scaleX: this.smallScaleX, scaleY: this.smallScaleY }, this.scaleTime, null, new Laya.Handler(this, function () {
                this.ani = null;
            }));
        }
        else {
            var x = Math.round(this.initX +
                ((this.initScaleX - this.smallScaleX) * this.initWidth) / 2 +
                (this.smallScaleX - this.initScaleX) * this.sprite.pivotX);
            var y = Math.round(this.initY +
                ((this.initScaleY - this.smallScaleY) * this.initHeight) / 2 +
                (this.smallScaleY - this.initScaleY) * this.sprite.pivotY);
            this.ani = Laya.Tween.to(this.sprite, { scaleX: this.smallScaleX, scaleY: this.smallScaleY, x: x, y: y }, this.scaleTime, null, new Laya.Handler(this, function () {
                this.ani = null;
            }));
        }
    }
    scaleBig() {
        if (this.ignoreMove) {
            this.ani = Laya.Tween.to(this.sprite, { scaleX: this.initScaleX, scaleY: this.initScaleY }, this.scaleTime, null, new Laya.Handler(this, function () {
                this.ani = null;
            }));
        }
        else {
            this.ani = Laya.Tween.to(this.sprite, {
                scaleX: this.initScaleX,
                scaleY: this.initScaleY,
                x: this.initX,
                y: this.initY
            }, this.scaleTime, null, new Laya.Handler(this, function () {
                this.ani = null;
            }));
        }
    }
}

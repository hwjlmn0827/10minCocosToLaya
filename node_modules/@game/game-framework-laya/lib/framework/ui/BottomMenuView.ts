import TouchBlockLayer from './TouchBlockLayer';
import GlobalZorder from './GlobalZorder';
import BottomMenu from './BottomMenu';
import DeviceUtil from '../util/DeviceUtil';

/**
 * 底部菜单所在容器
 */
export default class BottomMenuView extends Laya.View {
  private touchBlockLayer: TouchBlockLayer;
  private maskLayer: TouchBlockLayer;
  private _isClosing: boolean;
  private menu: BottomMenu;

  constructor(menu: BottomMenu) {
    super();
    this.createView({});
    this.menu = menu;
    this.menu.setMenuView(this);    
    this.width = Laya.stage.width;
    this.height = Laya.stage.height;
    this.zOrder = GlobalZorder.bottomMenu;
  }

  onAwake(): void {
    super.onAwake();
    this.maskLayer = new TouchBlockLayer(true);
    this.maskLayer.zOrder = -1;
    this.addChild(this.maskLayer);

    this.maskLayer.on(Laya.Event.CLICK, this, ()=>{
      if(this.menu.isCloseOnSide()){
        let notchLength = DeviceUtil.getInstance().getNotchLength();
        if(this.maskLayer.mouseY >= Laya.stage.height - notchLength){
          return;
        }
        let closeOnSideClickListener = this.menu.getCloseOnSideClickListener();
        if (closeOnSideClickListener) {
          closeOnSideClickListener();
        }
        this.menu.close();
      }
    });
    this.addChild(this.menu);
    
    this.menu.visible = false;
    this._isClosing = false;
    if (!this.touchBlockLayer) {
      this.touchBlockLayer = new TouchBlockLayer();
      this.addChild(this.touchBlockLayer);
    }
    Laya.timer.once(1, this, this.onAnimationStart);
  }

  /**
   * 返回实际的菜单
   */
  public getMenu(){
    return this.menu;
  }

  onAnimationStart() {
    this.menu.visible = true;
    this.menu.y = Laya.stage.height;
    let targetY = Laya.stage.height - this.menu.height;
    if(Laya.stage.width < Laya.stage.height){
      targetY = targetY - DeviceUtil.getInstance().getNotchLength();
    }
    Laya.Tween.to(
      this.menu,
      {
        y: targetY
      },
      350,
      Laya.Ease.expoOut,
      Laya.Handler.create(this, () => {
        if (this.touchBlockLayer) {
          this.touchBlockLayer.destroy();
          this.touchBlockLayer = null;
        }
        this.onOpened();
      })
    );
  }

  onOpened(): void {
    this.menu.onOpened();
  }

  close(): void {
    if (this._isClosing) {
      return;
    }
    this._isClosing = true;
    if (!this.touchBlockLayer) {
      this.touchBlockLayer = new TouchBlockLayer();
      this.addChild(this.touchBlockLayer);
    }
    Laya.Tween.to(this.maskLayer, { alpha: 0 }, 350);

    Laya.Tween.to(
      this.menu,
      { y: Laya.stage.height },
      350,
      Laya.Ease.expoOut,
      Laya.Handler.create(this, this.onClosed)
    );
  }

  onClosed(): void {
    this.menu.onClosed();
    this.destroy();
  }
}

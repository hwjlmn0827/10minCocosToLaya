import LoggerUtil from '../util/LoggerUtil';
import BottomMenuView from './BottomMenuView';

/**
 * 底部菜单父类
 */
export default class BottomMenu extends Laya.View {
  private menuView: BottomMenuView;
  private loganName: string;
  private _isCloseOnSide: boolean = true;
  private _closeOnSideClickListener: Function;

  constructor() {
    super();
  }

  /**
   * logan日志上报名字
   * 一般使用类名
   * 需要子类在构造方法中调用
   * @param loganName
   */
  public setLoganName(loganName: string): void {
    this.loganName = loganName;
  }

  /**
   * 设置是否响应点击底部菜单外部区域关闭
   * @param isCloseOnSide 是否影响
   */
  public setCloseOnSide(isCloseOnSide: boolean): void {
    this._isCloseOnSide = isCloseOnSide;
  }

  /**
   * 返回是否响应点击底部菜单外部区域关闭
   */
  public isCloseOnSide():boolean{
    return this._isCloseOnSide;
  }

  /**
   * 设置点击底部菜单外部区域执行方法
   * @param closeOnSideClickListener 点击弹框外部区域执行方法
   */
  public setCloseOnSideClickListener(closeOnSideClickListener: Function) {
    this._closeOnSideClickListener = closeOnSideClickListener;
  }

  /**
   * 返回已设置点击底部菜单外部区域执行方法
   */
  public getCloseOnSideClickListener():Function{
    return this._closeOnSideClickListener;
  }

  /**
   * 关闭底部菜单
   */
  public close(): void {
    this.menuView.close();
  }

  /**
   * [游戏框架内部调用]
   * 设置menuView
   * @param menuView 
   */
  setMenuView(menuView: BottomMenuView): void {
    this.menuView = menuView;
  }

  onOpened(): void {
    if(this.loganName){
      LoggerUtil.getInstance().info('[BottomMenu] onOpened', this.loganName);
    }else{
      LoggerUtil.getInstance().warn(
        '[BottomMenu] onOpened loganName error!',
        this.constructor.name
      );
    }
  }

  onClosed(): void {
    if(this.loganName){
      LoggerUtil.getInstance().info('[BottomMenu] onClosed', this.loganName);
    }else{
      LoggerUtil.getInstance().warn(
        '[BottomMenu] onClosed loganName error!',
        this.constructor.name
      );
    }
    this.destroy();
  }
}
